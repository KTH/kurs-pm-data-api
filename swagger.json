{
  "swagger": "2.0",
  "info": {
    "title": "[NEW] Course Information – API for course memos",
    "description": "API that supports the new administraion site that makes it possible to create and manage course memos.",
    "version": "1.0.0"
  },
  "basePath": "/api/kurs-pm-data",
  "produces": ["application/json", "application/pdf"],
  "paths": {
    "/_checkAPIkey": {
      "get": {
        "operationId": "checkAPIkey",
        "summary": "GET a test endpoint that is protected by api key to validate that consumer has a proper api key",
        "description": "",
        "parameters": [],
        "tags": ["system"],
        "responses": {
          "200": {
            "description": "An empty response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      }
    },
    "/v1/data/{id}": {
      "get": {
        "operationId": "getDataById",
        "summary": "Get data for simple test",
        "description": "Gets some form of data that only requires read access for testing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of data to get",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The requested data",
            "schema": {
              "$ref": "#/definitions/Data"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      },
      "post": {
        "operationId": "postDataById",
        "summary": "Saves an object in the database for test",
        "description": "Saves changes to an object in the database for test",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the data to save",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "The data to save",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Data"
            }
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "A successful save"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["write"]
          }
        ]
      }
    },
    "/v1/memos/{type}/{courseCode}/": {
      "get": {
        "operationId": "getAllMemosByCourseCodeAndType",
        "summary": "Get all course memos documents fetched by this course code and type of status, only published, or draft, or archived, or old ",
        "description": "Gets some form of data that only requires read access",
        "parameters": [
          {
            "name": "courseCode",
            "in": "path",
            "description": "Course code, ex, SF1624",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "published / draft / archived / old",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The requested data",
            "schema": {
              "$ref": "#/definitions/MemoDataListForCourseCode"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      }
    },
    "/v1/memo/{memoEndPoint}": {
      "get": {
        "operationId": "getPublishedMemoByEndPoint",
        "summary": "Get published course memo document descriptive data by its endpoint memoEndPoint ",
        "description": "Get a memo which exists in database and has memoEndPoint which identify unique memo",
        "parameters": [
          {
            "name": "memoEndPoint",
            "in": "path",
            "description": "memoEndPoint is used to keep all versions under the same endpoint, unique for memo for one kursomgång. Unchangeable enpoint to display it in url (for bookmarks) and keep track on versions change",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The requested data",
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      },
      "post": {
        "operationId": "publishMemoByEndPoint",
        "summary": "Saves an object of one course memo document descriptive data in the database per course and term, f.e, SF1624 and 20191",
        "description": "Saves a course memo document descriptive data in the database per course and term",
        "parameters": [
          {
            "name": "memoEndPoint",
            "in": "path",
            "description": "memoEndPoint is used to keep all versions under the same endpoint, unique for memo for one kursomgång. Unchangeable enpoint to display it in url (for bookmarks) and keep track on versions change",
            "required": true,
            "type": "string"
          },
          {
            "name": "roundCourseMemoData",
            "in": "body",
            "description": "Array with memo data objects",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "A successful save"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["write"]
          }
        ]
      }
    },
    "/v1/pdf/{memoEndPoint}": {
      "get": {
        "operationId": "getPdfMemoByEndPoint",
        "summary": "Get published course memo as PDF by its endpoint memoEndPoint",
        "description": "Get a memo which exists in database and has memoEndPoint which identify unique memo",
        "produces": "application/pdf",
        "parameters": [
          {
            "name": "memoEndPoint",
            "in": "path",
            "description": "memoEndPoint is used to keep all versions under the same endpoint, unique for memo for one course offering. Unchangeable endpoint to display it in url (for bookmarks) and keep track on versions change",
            "required": true,
            "type": "string"
          },
          {
            "name": "download",
            "in": "query",
            "description": "Should PDF document be download? If download parameter is true, the response will have a 'Content-Disposition' header set.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The requested PDF file",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      }
    },
    "/v1/draft/{memoEndPoint}": {
      "get": {
        "operationId": "getDraftByEndPoint",
        "summary": "Get published course memo document descriptive data by its endpoint memoEndPoint",
        "description": "For admin pages often need to access draft version of memo to edit it before publishing",
        "parameters": [
          {
            "name": "memoEndPoint",
            "in": "path",
            "description": "memoEndPoint is used to keep all versions under the same endpoint, unique for memo for one kursomgång. Unchangeable enpoint to display it in url (for bookmarks) and keep track on versions change",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The requested data",
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      },
      "put": {
        "operationId": "updateCreatedDraft",
        "summary": "The draft is already in database. Update some of its properties, f.e., only text for examinations, for fast and often update",
        "description": "Saves a course memo document descriptive data in the database per course and term, and per chosen {key: value}",
        "parameters": [
          {
            "name": "memoEndPoint",
            "in": "path",
            "description": "memoEndPoint is used to keep all versions under the same endpoint, unique for memo for one kursomgång. Unchangeable enpoint to display it in url (for bookmarks) and keep track on versions change",
            "required": true,
            "type": "string"
          },
          {
            "name": "roundCourseMemoData",
            "in": "body",
            "description": "Data with course code, semester and rounds to create first draft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "A successful save"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["write"]
          }
        ]
      },
      "post": {
        "operationId": "createDraftByMemoEndPoint",
        "summary": "Admin page: create new (empty with default values /  or copied from published version) draft and assign memoEndPoint to it",
        "description": "Creates a copy of published memo and save it as a draft or creates a new empty draft with default values",
        "parameters": [
          {
            "name": "memoEndPoint",
            "in": "path",
            "description": "memoEndPoint is used to keep all versions under the same endpoint, unique for memo for one kursomgång. Unchangeable enpoint to display it in url (for bookmarks) and keep track on versions change",
            "required": true,
            "type": "string"
          },
          {
            "name": "roundCourseMemoData",
            "in": "body",
            "description": "Data with course code, semester and rounds to create first draft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "A successful save"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["write"]
          }
        ]
      },
      "delete": {
        "operationId": "deleteDraftByMemoEndPoint",
        "summary": "Delete a course memo draft by memoEndPoint",
        "description": "Delete draft for course memo with sent memoEndPoint",
        "parameters": [
          {
            "name": "memoEndPoint",
            "in": "path",
            "description": "memoEndPoint of the memo draft to delete course memo data",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The memo was deleted",
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": {
          "api_key": ["read"]
        }
      }
    },
    "/v1/usedRoundsForCourseSemester/{courseCode}/semester/{semester}": {
      "get": {
        "operationId": "getCourseSemesterUsedRounds",
        "summary": "Gets a list of used round ids for a semester in a course",
        "parameters": [
          {
            "name": "courseCode",
            "in": "path",
            "description": "Course code, six or seven characters",
            "required": true,
            "type": "string"
          },
          {
            "name": "semester",
            "description": "Semester for rounds, f.e., 20201",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "Round ids",
            "schema": {
              "$ref": "#/definitions/usedRoundsForCourseAndSemester"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": {
          "api_key": ["read"]
        }
      }
    },
    "/v1/usedMemosStartingFromPrevYearSemester/{courseCode}": {
      "get": {
        "operationId": "getMemosStartingFromPrevYearSemester",
        "summary": "Gets a list of used round ids for a semester in a course",
        "parameters": [
          {
            "name": "courseCode",
            "in": "path",
            "description": "Course code, six or seven characters",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "Round ids",
            "schema": {
              "$ref": "#/definitions/latestPublishedAndDraftMemos"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": {
          "api_key": ["read"]
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header",
      "scopes": {
        "read": "Read access to data",
        "write": "Write access to data"
      }
    }
  },
  "definitions": {
    "Data": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing some specific data"
        },
        "name": {
          "type": "string",
          "description": "Description of the data"
        }
      }
    },
    "usedRoundsForCourseAndSemester": {
      "properties": {
        "usedRoundsThisSemester": {
          "type": "array",
          "items": "string",
          "description": "List of round ids that have been used for a course semester"
        }
      }
    },
    "latestPublishedAndDraftMemos": {
      "properties": {
        "publishedMemos": {
          "type": "array",
          "items": {
            "schema": {
              "$ref": "#/definitions/UsedMemos"
            }
          },
          "description": "List of latest published memos which do not have an active draft which user can edit"
        },
        "draftsOfPublishedMemos": {
          "type": "array",
          "items": {
            "schema": {
              "$ref": "#/definitions/UsedMemos"
            }
          },
          "description": "List of latest published memos which have an active draft which user can edit"
        },
        "draftsWithNoActivePublishedVer": {
          "type": "array",
          "items": {
            "schema": {
              "$ref": "#/definitions/UsedMemos"
            }
          },
          "description": "List of draft memos, endpoint, id"
        }
      }
    },
    "newSection": {
      "properties": {
        "uKey": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "htmlContent": {
          "type": "string"
        },
        "visibleInMemo": {
          "type": "boolean"
        }
      }
    },
    "UsedMemos": {
      "properties": {
        "semester": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "memoId": {
          "type": "string"
        },
        "memoEndPoint": {
          "type": "string"
        },
        "memoName": {
          "type": "string"
        },
        "ladokRoundIds": {
          "type": "array",
          "items": "string"
        }
      }
    },
    "MemoDataListForCourseCode": {
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier representing some specific data"
        },
        "courseCode": {
          "type": "string",
          "description": "Course code for which it is valid"
        },
        "memo": {
          "type": "object",
          "description": "....",
          "items": {
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          }
        }
      }
    },
    "MemoData": {
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier specific for this object so it can be used to delete a draft"
        },
        "courseCode": {
          "type": "string",
          "description": "Course code for which it is valid"
        },
        "lastChangeDate": {
          "type": "string",
          "description": "Date and time for last change, set by API"
        },
        "lastPublishedVersionPublishDate": {
          "type": "string",
          "description": "Date and time for last published version, set by API"
        },
        "memoCommonLangAbbr": {
          "type": "string",
          "description": "Memo language based on common languageOfInstructions for all rounds, 'sv' or 'en'"
        },
        "memoEndPoint": {
          "type": "string",
          "description": "memoEndPoint is used to keep all versions under the same endpoint, unique for memo for one kursomgång. Unchangeable enpoint to display it in url (for bookmarks) and keep track on versions change"
        },
        "memoName": {
          "type": "string",
          "description": "Changeable name for course memo based on course offering name and semester"
        },
        "semester": {
          "type": "string",
          "description": "Course start term year (spring(VT)-1, autumn(HT)-2) , f.e. 20182 or 20181 (termin)"
        },
        "status": {
          "type": "string",
          "description": "By default will be set to 'draft'. Other values: published, old, archived, draft"
        },
        "version": {
          "type": "string",
          "description": "Will be set by api, it will be incremented for copied draft"
        },
        "additionalRegulations": {
          "type": "string",
          "description": "Text field for html with Additional regulations / Övriga föreskrifter (kopps kursplan)"
        },
        "commentAboutMadeChanges": {
          "type": "string",
          "description": "Text field to describe what changes have been made to new version of published memo"
        },
        "communicationDuringCourse": {
          "type": "string",
          "description": "Text field for html with Communication during course / Kommunikation i kursen (KIP - via kurs pm admin)"
        },
        "courseContent": {
          "type": "string",
          "description": "Text field for html with course content/ Kursinnehåll (kopps kursplan)"
        },
        "courseCoordinator": {
          "type": "string",
          "description": "Text field for html with Course coordinator  / Kursansvarig (admin via kopps, fetched from redis-ug)"
        },
        "ethicalApproach": {
          "type": "string",
          "description": "Text field for html with Ethical approach / Etiskt förhållningssätt (kopps kursplan)"
        },
        "ethicalApproachSubSection": {
          "type": "string",
          "description": "Text field for html with Course specific regulations for ethical approach / Kursspecifika regler för etiskt förhållningssätt (KIP - via kurs pm admin)"
        },
        "examination": {
          "type": "string",
          "description": "Text field for html with Ethical approach / Etiskt förhållningssätt (kopps kursplan)"
        },
        "examinationSubSection": {
          "type": "string",
          "description": "Text field for html with examination Modules / examination Moduler (KIP - via kurs pm admin)"
        },
        "examiner": {
          "type": "string",
          "description": "Text field for html with Examinator / Examinator (admin via kopps, fetched from redis-ug)"
        },
        "extraHeaders1": {
          "type": "array",
          "items": {
            "schema": {
              "$ref": "#/definitions/newSection"
            }
          },
          "description": "Text field for html with extraHeaders / Egna Rubriker för Innehål och lärandemål "
        },
        "extraHeaders2": {
          "type": "array",
          "items": {
            "schema": {
              "$ref": "#/definitions/newSection"
            }
          },
          "description": "Text field for html with extraHeaders / Egna Rubriker för Förbereda inför kursstart "
        },
        "extraHeaders3": {
          "type": "array",
          "items": {
            "schema": {
              "$ref": "#/definitions/newSection"
            }
          },
          "description": "Text field for html with extraHeaders / Egna Rubriker för Examination "
        },
        "extraHeaders4": {
          "type": "array",
          "items": {
            "schema": {
              "$ref": "#/definitions/newSection"
            }
          },
          "description": "Text field for html with extraHeaders / Egna Rubriker för Ytterligare Information "
        },
        "equipment": {
          "type": "string",
          "description": "Text field for html with Equipment / Utrustning (kopps kursinformation)"
        },
        "gradingCriteria": {
          "type": "string",
          "description": "Text field for html with Grading Criteria / Målrelaterade betygskriterier / (KIP - via kurs pm admin)"
        },
        "gradingScale": {
          "type": "string",
          "description": "Text field for html with Grading scale / Betygsskala (kopps kursplan)"
        },
        "infoForReregisteredStudents": {
          "type": "string",
          "description": "Text field for html with Information for re-registered students / Information till omregistrerade studenter (KIP - via kurs pm admin)"
        },
        "ladokRoundIds": {
          "type": "array",
          "items": "string",
          "memoEndPoint": "Course round offerings included in one kursomgång(round) for which memo is created"
        },
        "languageOfInstructions": {
          "type": "string",
          "description": "Memo language: Svenska, Swedish, Engelska, English ..."
        },
        "learningActivities": {
          "type": "string",
          "description": "Text field for html with Learning activities / Läraktiviteter (KIP - via kurs pm admin)"
        },
        "learningOutcomes": {
          "type": "string",
          "description": "Text field for html with Intended learning outcomes / Lärandemål (kopps kursplan)"
        },
        "literature": {
          "type": "string",
          "description": "Text field for html with Literature / Kurslitteratur (kopps kursinformation)"
        },
        "otherContacts": {
          "type": "string",
          "description": "Text field for html with other Contacts like Lab supervisors / Labbhandledare (KIP - via kurs pm admin)"
        },
        "otherRequirementsForFinalGrade": {
          "type": "string",
          "description": "Text field for html with Other requirements for final grade / Övriga krav för slutbetyg (kopps kursplan)"
        },
        "permanentDisability": {
          "type": "string",
          "description": "Text field for html with Permanent Disability / Funktionsnedsättning (KIP - via kurs pm admin)"
        },
        "permanentDisabilitySubSection": {
          "type": "string",
          "description": "Text field for html subsection with Permanent Disability / Funktionsnedsättning (KIP - via kurs pm admin)"
        },
        "possibilityToAddition": {
          "type": "string",
          "description": "Text field for html with Opportunity to raise an approved grade via renewed examination / Möjlighet till plussning (kopps kursinformation)"
        },
        "possibilityToCompletion": {
          "type": "string",
          "description": "Text field for html with Opportunity to complete the requirements via supplementary examination / Möjlighet till komplettering (kopps kursinformation)"
        },
        "possibilityToCompensate": {
          "type": "string",
          "description": "Text field for html with Opportunity to compensate / Möjlighet till ersättningsuppgifter (KIP - via kurs pm admin)"
        },
        "preparations": {
          "type": "string",
          "description": "Text field for html with Preparations / Förbereda inför kursstart (KIP - via kurs pm admin)"
        },
        "prerequisites": {
          "type": "string",
          "description": "Text field for html with Prerequisites / Rekommenderade förkunskaper (kopps kursinformation)"
        },
        "reportingResults": {
          "type": "string",
          "description": "Text field for html with Results reporting / Resultatrapportering (KIP - via kurs pm admin)"
        },
        "scheduleDetails": {
          "type": "string",
          "description": "Text field for html with Schedule details / Detaljschema / (KIP - via kurs pm admin)"
        },
        "software": {
          "type": "string",
          "description": "Text field for html with Software / Programvara (KIP - via kurs pm admin)"
        },
        "teacher": {
          "type": "string",
          "description": "Text field for html with  Teacher / Lärare (admin via kopps, fetched from redis-ug)"
        },
        "teacherAssistants": {
          "type": "string",
          "description": "Text field for html with Teacher assistants / Lärarassistenter (admin via kopps, fetched from redis-ug)"
        }
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "UserList": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}
