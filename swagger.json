{
  "swagger": "2.0",
  "info": {
    "title": "[NEW] Course Information – API for course memos",
    "description": "API that supports the new administraion site that makes it possible to create and manage course memos.",
    "version": "1.0.0"
  },
  "basePath": "/api/kurs-pm-data",
  "produces": ["application/json"],
  "paths": {
    "/_checkAPIkey": {
      "get": {
        "operationId": "checkAPIkey",
        "summary": "GET a test endpoint that is protected by api key to validate that consumer has a proper api key",
        "description": "",
        "parameters": [],
        "tags": ["system"],
        "responses": {
          "200": {
            "description": "An empty response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      }
    },
    "/v1/data/{id}": {
      "get": {
        "operationId": "getDataById",
        "summary": "Get data",
        "description": "Gets some form of data that only requires read access",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of data to get",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The requested data",
            "schema": {
              "$ref": "#/definitions/Data"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      },
      "post": {
        "operationId": "postDataById",
        "summary": "Saves an object in the database",
        "description": "Saves changes to an object in the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the data to save",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "The data to save",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Data"
            }
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "A successful save"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["write"]
          }
        ]
      }
    },
    "/v1/courseMemoData/{id}": {
      "get": {
        "operationId": "getCourseMemoDataById",
        "summary": "Get course memo document descriptive data by document unique id ",
        "description": "Gets some form of data that only requires read access",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the round.semester.year.x to course memo data",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "The requested data",
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["read"]
          }
        ]
      },
      "post": {
        "operationId": "postCourseMemoData",
        "summary": "Saves an object of one course memo document descriptive data in the database per course and term",
        "description": "Saves a course memo document descriptive data in the database per course and term",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the round.semester.year.x to course memo data",
            "required": true,
            "type": "string"
          },
          {
            "name": "roundCourseMemoData",
            "in": "body",
            "description": "Array with memo data objects",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemoData"
            }
          }
        ],
        "tags": ["v1"],
        "responses": {
          "200": {
            "description": "A successful save"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "api_key": ["write"]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header",
      "scopes": {
        "read": "Read access to data",
        "write": "Write access to data"
      }
    }
  },
  "definitions": {
    "Data": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier representing some specific data"
        },
        "name": {
          "type": "string",
          "description": "Description of the data"
        }
      }
    },
    "MemoData": {
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier representing some specific data"
        },
        "additionalRegulations": {
          "type": "string",
          "description": "Text field for html with Additional regulations / Övriga föreskrifter (kopps kursplan)"
        },
        "bonusPoints": {
          "type": "string",
          "description": "Text field for html with Bonus points / Bonuspoäng (KIP - via kurs pm admin)"
        },
        "communicationWithTeachers": {
          "type": "string",
          "description": "Text field for html with Communication during course / Kommunikation i kursen (KIP - via kurs pm admin)"
        },
        "courseCode": {
          "type": "string",
          "description": "Course code for which it is valid"
        },
        "courseContent": {
          "type": "string",
          "description": "Text field for html with course content/ Kursinnehåll (kopps kursplan)"
        },
        "courseCoordinator": {
          "type": "string",
          "description": "Text field for html with Course coordinator  / Kursansvarig (admin via kopps, fetched from redis-ug)"
        },
        "ethicalApproach": {
          "type": "string",
          "description": "Text field for html with Ethical approach / Etiskt förhållningssätt (kopps kursplan)"
        },
        "ethicalApproachThisCourse": {
          "type": "string",
          "description": "Text field for html with Course specific regulations for ethical approach / Kursspecifika regler för etiskt förhållningssätt (KIP - via kurs pm admin)"
        },
        "examination": {
          "type": "string",
          "description": "Text field for html with Ethical approach / Etiskt förhållningssätt (kopps kursplan)"
        },
        "examinationModules": {
          "type": "string",
          "description": "Text field for html with examination Modules / examinationModuler (KIP - via kurs pm admin)"
        },
        "examiner": {
          "type": "string",
          "description": "Text field for html with Examinator / Examinator (admin via kopps, fetched from redis-ug)"
        },
        "equipment": {
          "type": "string",
          "description": "Text field for html with Equipment / Utrustning (kopps kursinformation)"
        },
        "gradingCriteria": {
          "type": "string",
          "description": "Text field for html with Grading Criteria / Målrelaterade betygskriterier / (KIP - via kurs pm admin)"
        },
        "gradingScale": {
          "type": "string",
          "description": "Text field for html with Grading scale / Betygsskala (kopps kursplan)"
        },
        "infoContactName": {
          "type": "string",
          "description": "Text field for html with info Contact person / Kontaktperson (admin via kopps, fetched from kopps)"
        },
        "infoForReregisteredStudents": {
          "type": "string",
          "description": "Text field for html with Information for re-registered students / Information till omregistrerade studenter (KIP - via kurs pm admin)"
        },
        "languageOfInstructions": {
          "type": "string",
          "description": "Text field for html with Language of instruction / Undervisningsspråk (kopps course round related)"
        },
        "lastChangeDate": {
          "type": "string",
          "description": "Date and time for last change, set by API"
        },
        "learningActivities": {
          "type": "string",
          "description": "Text field for html with Learning activities / Läraktiviteter (KIP - via kurs pm admin)"
        },
        "learningOutcomes": {
          "type": "string",
          "description": "Text field for html with Intended learning outcomes / Lärandemål (kopps kursplan)"
        },
        "literature": {
          "type": "string",
          "description": "Text field for html with Literature / Kurslitteratur (kopps kursinformation)"
        },
        "otherContacts": {
          "type": "string",
          "description": "Text field for html with other Contacts like Lab supervisors / Labbhandledare (KIP - via kurs pm admin)"
        },
        "otherRequirementsForFinalGrade": {
          "type": "string",
          "description": "Text field for html with Other requirements for final grade / Övriga krav för slutbetyg (kopps kursplan)"
        },
        "permanentDisability": {
          "type": "string",
          "description": "Text field for html with Permanent Disability / Funktionsnedsättning (KIP - via kurs pm admin)"
        },
        "possibilityToAddition": {
          "type": "string",
          "description": "Text field for html with Opportunity to raise an approved grade via renewed examination / Möjlighet till plussning (kopps kursinformation)"
        },
        "possibilityToCompletion": {
          "type": "string",
          "description": "Text field for html with Opportunity to complete the requirements via supplementary examination / Möjlighet till komplettering (kopps kursinformation)"
        },
        "preparations": {
          "type": "string",
          "description": "Text field for html with Preparations / Förbereda inför kursstart (KIP - via kurs pm admin)"
        },
        "prerequisites": {
          "type": "string",
          "description": "Text field for html with Prerequisites / Rekommenderade förkunskaper (kopps kursinformation)"
        },
        "previousTextsList": {
          "type": "array",
          "items": "string",
          "description": "Array for object with previous memo texts and publish date "
        },
        "scheduleDetails": {
          "type": "string",
          "description": "Text field for html with Schedule details / Detaljschema / (KIP - via kurs pm admin)"
        },
        "semester": {
          "type": "string",
          "description": "Course start term year (spring(VT)-1, autumn(HT)-2) , f.e. 20182 or 20181 (termin)"
        },
        "software": {
          "type": "string",
          "description": "Text field for html with Software / Programvara (KIP - via kurs pm admin)"
        },
        "teacher": {
          "type": "string",
          "description": "Text field for html with  Teacher / Lärare (admin via kopps, fetched from redis-ug)"
        },
        "teacherAssistants": {
          "type": "string",
          "description": "Text field for html with Teacher assistants / Lärarassistenter (admin via kopps, fetched from redis-ug)"
        }
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "UserList": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}
